stages:
  - dependencies
  - test
  - build

cache:
  paths:
    - node_modules/

Install_dependancies:
  stage: dependencies
  image: node:12.16.3-alpine
  script:
    - npm install --silent
  only:
    - develop
    - staging
  except:
    paths: '/client'
  artifacts:
    paths:
      - node_modules/

Testing:
  stage: test
  image: node:12.16.3-alpine
  only:
    - develop
    - staging
  except:
    paths: '/client'
  script: npm run test

Develop build:
  stage: build
  image: docker:18
  services:
    - docker:dind
  only:
    - develop
  except:
    paths: '/client'
  cache:
    paths:
      - node_modules/
  before_script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/app:develop || true
    - >
      docker build
      --pull
      --build-arg VCS_REF=develop
      --build-arg VCS_URL=$CI_PROJECT_URL
      --cache-from $CI_REGISTRY_IMAGE/app:develop
      --tag $CI_REGISTRY_IMAGE/app:develop
      .
    - docker push $CI_REGISTRY_IMAGE/app:develop

Staging build:
  stage: build
  image: docker:18
  services:
    - docker:dind
  only:
    - staging
  except:
    paths: '/client'
  cache:
    paths:
      - node_modules/
  before_script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker info
  script:
    - docker pull $CI_REGISTRY_IMAGE/app:staging || true
    - >
      docker build
      --pull
      --build-arg VCS_REF=staging
      --build-arg VCS_URL=$CI_PROJECT_URL
      --cache-from $CI_REGISTRY_IMAGE/app:staging
      --tag $CI_REGISTRY_IMAGE/app:staging
      .
    - docker push $CI_REGISTRY_IMAGE/app:staging
